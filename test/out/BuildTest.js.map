{"version":3,"file":"BuildTest.js","sourceRoot":"","sources":["../src/BuildTest.ts"],"names":[],"mappings":"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","sourcesContent":["import { checkBuildRequestOptions } from \"app-builder-lib\"\nimport { readAsar } from \"app-builder-lib/out/asar/asar\"\nimport { doMergeConfigs } from \"app-builder-lib/out/util/config\"\nimport { walk } from \"builder-util/out/fs\"\nimport { Arch, createTargets, DIR_TARGET, Platform } from \"electron-builder\"\nimport { promises as fs, readFileSync } from \"fs\"\nimport { outputJson } from \"fs-extra\"\nimport * as path from \"path\"\nimport { createYargs } from \"electron-builder/out/builder\"\nimport { app, appTwo, appTwoThrows, assertPack, linuxDirTarget, modifyPackageJson, packageJson, toSystemIndependentPath } from \"./helpers/packTester\"\nimport { ELECTRON_VERSION } from \"./helpers/testConfig\"\n\ntest(\"cli\", async () => {\n  // because these methods are internal\n  const { configureBuildCommand, normalizeOptions } = require(\"electron-builder/out/builder\")\n  const yargs = createYargs()\n  configureBuildCommand(yargs)\n\n  function parse(input: string): any {\n    const options = normalizeOptions(yargs.parse(input))\n    checkBuildRequestOptions(options)\n    return options\n  }\n\n  expect(parse(\"-owl --x64 --ia32\"))\n  expect(parse(\"-mwl --x64 --ia32\"))\n\n  expect(parse(\"--dir\")).toMatchObject({targets: Platform.current().createTarget(DIR_TARGET)})\n  expect(parse(\"--mac --dir\")).toMatchSnapshot()\n  expect(parse(\"--x64 --dir\")).toMatchObject({targets: Platform.current().createTarget(DIR_TARGET, Arch.x64)})\n\n  expect(parse(\"--ia32 --x64\")).toMatchObject({targets: Platform.current().createTarget(null, Arch.x64, Arch.ia32)})\n  expect(parse(\"--linux\")).toMatchSnapshot()\n  expect(parse(\"--win\")).toMatchSnapshot()\n  expect(parse(\"-owl\")).toMatchSnapshot()\n  expect(parse(\"-l tar.gz:ia32\")).toMatchSnapshot()\n  expect(parse(\"-l tar.gz:x64\")).toMatchSnapshot()\n  expect(parse(\"-l tar.gz\")).toMatchSnapshot()\n  expect(parse(\"-w tar.gz:x64\")).toMatchSnapshot()\n  expect(parse(\"-p always -w --x64\")).toMatchSnapshot()\n  expect(parse(\"--prepackaged someDir -w --x64\")).toMatchSnapshot()\n  expect(parse(\"--project someDir -w --x64\")).toMatchSnapshot()\n\n  expect(parse(\"-c.compress=store -c.asar -c ./config.json\")).toMatchObject({\n    config: {\n      asar: true,\n      compress: \"store\",\n      extends: \"./config.json\"\n    }\n  })\n})\n\ntest(\"merge configurations\", () => {\n  const result = doMergeConfigs({\n    files: [\n      \"**/*\",\n      \"!webpack\",\n      \"!.*\",\n      \"!config/jsdoc.json\",\n      \"!package.*\",\n      \"!docs\",\n      \"!private\"\n    ],\n  }, {\n    files: [\n      {\n        from: \".\",\n        filter: [\n          \"package.json\"\n        ]\n      },\n      {\n        from: \"dist/main\"\n      },\n      {\n        from: \"dist/renderer\"\n      },\n      {\n        from: \"dist/renderer-dll\"\n      }\n    ],\n  })\n\n  // console.log(\"data: \" + JSON.stringify(result, null, 2))\n  expect(result).toMatchObject({\n    directories: {\n      output: \"dist\",\n      buildResources: \"build\"\n    },\n    files: [\n      {\n        filter: [\n          \"package.json\",\n          \"**/*\",\n          \"!webpack\",\n          \"!.*\",\n          \"!config/jsdoc.json\",\n          \"!package.*\",\n          \"!docs\",\n          \"!private\"\n        ]\n      },\n      {\n        from: \"dist/main\"\n      },\n      {\n        from: \"dist/renderer\"\n      },\n      {\n        from: \"dist/renderer-dll\"\n      }\n    ]\n  })\n})\n\ntest(\"build in the app package.json\", appTwoThrows({targets: linuxDirTarget}, {\n  projectDirCreated: it => modifyPackageJson(it, data => {\n    data.build = {\n      productName: \"bar\",\n    }\n  }, true)\n}))\n\ntest(\"relative index\", appTwo({\n  targets: linuxDirTarget,\n}, {\n  projectDirCreated: projectDir => modifyPackageJson(projectDir, data => {\n    data.main = \"./index.js\"\n  }, true)\n}))\n\nit.ifDevOrLinuxCi(\"electron version from electron-prebuilt dependency\", app({\n  targets: linuxDirTarget,\n}, {\n  projectDirCreated: projectDir => Promise.all([\n    outputJson(path.join(projectDir, \"node_modules\", \"electron-prebuilt\", \"package.json\"), {\n      version: ELECTRON_VERSION\n    }),\n    modifyPackageJson(projectDir, data => {\n      delete data.build.electronVersion\n      data.devDependencies = {}\n    })\n  ])\n}))\n\ntest.ifDevOrLinuxCi(\"electron version from electron dependency\", app({\n  targets: linuxDirTarget,\n}, {\n  projectDirCreated: projectDir => Promise.all([\n    outputJson(path.join(projectDir, \"node_modules\", \"electron\", \"package.json\"), {\n      version: ELECTRON_VERSION\n    }),\n    modifyPackageJson(projectDir, data => {\n      delete data.build.electronVersion\n      data.devDependencies = {}\n    })\n  ])\n}))\n\ntest.ifDevOrLinuxCi(\"electron version from build\", app({\n  targets: linuxDirTarget,\n}, {\n  projectDirCreated: projectDir => modifyPackageJson(projectDir, data => {\n    data.devDependencies = {}\n    data.build.electronVersion = ELECTRON_VERSION\n  })\n}))\n\ntest(\"www as default dir\", appTwo({\n  targets: Platform.LINUX.createTarget(DIR_TARGET),\n}, {\n  projectDirCreated: projectDir => fs.rename(path.join(projectDir, \"app\"), path.join(projectDir, \"www\"))\n}))\n\ntest.ifLinuxOrDevMac(\"afterPack\", () => {\n  let called = 0\n  return assertPack(\"test-app-one\", {\n    targets: createTargets([Platform.LINUX, Platform.MAC], DIR_TARGET),\n    config: {\n      afterPack: () => {\n        called++\n        return Promise.resolve()\n      }\n    }\n  }, {\n    packed: async () => {\n      expect(called).toEqual(2)\n    }\n  })\n})\n\ntest.ifLinuxOrDevMac(\"afterSign\", () => {\n  let called = 0\n  return assertPack(\"test-app-one\", {\n    targets: createTargets([Platform.LINUX, Platform.MAC], DIR_TARGET),\n    config: {\n      afterSign: () => {\n        called++\n        return Promise.resolve()\n      }\n    }\n  }, {\n    packed: async () => {\n      expect(called).toEqual(2)\n    }\n  })\n})\n\ntest.ifLinuxOrDevMac(\"beforeBuild\", () => {\n  let called = 0\n  return assertPack(\"test-app-one\", {\n    targets: createTargets([Platform.LINUX, Platform.MAC], DIR_TARGET),\n    config: {\n      npmRebuild: true,\n      beforeBuild: async () => {\n        called++\n      }\n    }\n  }, {\n    packed: async () => {\n      expect(called).toEqual(2)\n    }\n  })\n})\n\n// https://github.com/electron-userland/electron-builder/issues/1738\ntest.ifDevOrLinuxCi(\"win smart unpack\", () => {\n  // test onNodeModuleFile hook\n  const nodeModuleFiles: Array<string> = []\n  let p = \"\"\n  return app({\n    targets: Platform.WINDOWS.createTarget(DIR_TARGET),\n    config: {\n      npmRebuild: true,\n      onNodeModuleFile: file => {\n        const name = toSystemIndependentPath(path.relative(p, file))\n        if (!name.startsWith(\".\") && !name.endsWith(\".dll\") && name.includes(\".\")) {\n          nodeModuleFiles.push(name)\n        }\n      },\n    },\n  }, {\n    projectDirCreated: projectDir => {\n      p = projectDir\n      return packageJson(it => {\n        it.dependencies = {\n          debug: \"3.1.0\",\n          \"edge-cs\": \"1.2.1\",\n          \"@electron-builder/test-smart-unpack\": \"1.0.0\",\n          \"@electron-builder/test-smart-unpack-empty\": \"1.0.0\",\n        }\n      })(projectDir)\n    },\n    packed: async context => {\n      await verifySmartUnpack(context.getResources(Platform.WINDOWS))\n      expect(nodeModuleFiles).toMatchSnapshot()\n    }\n  })()\n})\n\nexport function removeUnstableProperties(data: any) {\n  return JSON.parse(JSON.stringify(data, (name, value) => {\n    if (name === \"offset\") {\n      return undefined\n    }\n    else if (name.endsWith(\".node\") && value.size != null) {\n      // size differs on various OS\n      value.size = \"<size>\"\n      return value\n    }\n    return value\n  }))\n}\n\nasync function verifySmartUnpack(resourceDir: string) {\n  const asarFs = await readAsar(path.join(resourceDir, \"app.asar\"))\n  expect(await asarFs.readJson(`node_modules${path.sep}debug${path.sep}package.json`)).toMatchObject({\n    name: \"debug\"\n  })\n  expect(removeUnstableProperties(asarFs.header)).toMatchSnapshot()\n\n  const files = (await walk(resourceDir, file => !path.basename(file).startsWith(\".\") && !file.endsWith(`resources${path.sep}inspector`)))\n    .map(it => {\n      const name = toSystemIndependentPath(it.substring(resourceDir.length + 1))\n      if (it.endsWith(\"package.json\")) {\n        return {name, content: readFileSync(it, \"utf-8\")}\n      }\n      return name\n    })\n  expect(files).toMatchSnapshot()\n}\n\n// https://github.com/electron-userland/electron-builder/issues/1738\ntest.ifAll.ifDevOrLinuxCi(\"posix smart unpack\", app({\n  targets: linuxDirTarget,\n  config: {\n    // https://github.com/electron-userland/electron-builder/issues/3273\n    // tslint:disable-next-line:no-invalid-template-strings\n    copyright: \"Copyright © 2018 ${author}\",\n    npmRebuild: true,\n    files: [\n      // test ignore pattern for node_modules defined as file set filter\n      {\n        filter: \"!node_modules/napi-build-utils/napi-build-utils-1.0.0.tgz\",\n      }\n    ]\n  }\n}, {\n  projectDirCreated: packageJson(it => {\n    it.dependencies = {\n      debug: \"4.1.1\",\n      \"edge-cs\": \"1.2.1\",\n      // no prebuilt for electron 3\n      // \"lzma-native\": \"3.0.10\",\n      keytar: \"5.6.0\",\n    }\n  }),\n  packed: context => {\n    expect(context.packager.appInfo.copyright).toBe(\"Copyright © 2018 Foo Bar\")\n    return verifySmartUnpack(context.getResources(Platform.LINUX))\n  }}))"]}