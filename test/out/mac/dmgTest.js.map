{"version":3,"file":"dmgTest.js","sourceRoot":"","sources":["../../src/mac/dmgTest.ts"],"names":[],"mappings":"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","sourcesContent":["import { exec } from \"builder-util\"\nimport { copyFile } from \"builder-util/out/fs\"\nimport { attachAndExecute, getDmgTemplatePath } from \"dmg-builder/out/dmgUtil\"\nimport { Platform } from \"electron-builder\"\nimport { PlatformPackager } from \"app-builder-lib\"\nimport * as path from \"path\"\nimport { promises as fs } from \"fs\"\nimport { remove } from \"fs-extra\"\nimport { assertThat } from \"../helpers/fileAssert\"\nimport { app, assertPack, copyTestAsset } from \"../helpers/packTester\"\n\nconst dmgTarget = Platform.MAC.createTarget(\"dmg\")\n\ntest.ifMac(\"dmg\", app({\n  targets: dmgTarget,\n  config: {\n    productName: \"DefaultDmg\",\n    publish: null,\n  },\n}))\n\ntest.ifMac(\"no build directory\", app({\n  targets: dmgTarget,\n  config: {\n    // dmg can mount only one volume name, so, to test in parallel, we set different product name\n    productName: \"NoBuildDirectory\",\n    publish: null,\n  },\n  effectiveOptionComputed: async it => {\n    if (!(\"volumePath\" in it)) {\n      return false\n    }\n\n    const volumePath = it.volumePath\n    await assertThat(path.join(volumePath, \".background\", \"background.tiff\")).isFile()\n    await assertThat(path.join(volumePath, \"Applications\")).isSymbolicLink()\n    expect(it.specification.contents).toMatchSnapshot()\n    return false\n  },\n}, {\n  projectDirCreated: projectDir => remove(path.join(projectDir, \"build\")),\n}))\n\ntest.ifMac(\"background color\", app({\n  targets: dmgTarget,\n  config: {\n    // dmg can mount only one volume name, so, to test in parallel, we set different product name\n    productName: \"BackgroundColor\",\n    publish: null,\n    dmg: {\n      backgroundColor: \"orange\",\n      // speed-up test\n      writeUpdateInfo: false,\n    },\n  },\n  effectiveOptionComputed: async it => {\n    if (!(\"volumePath\" in it)) {\n      return false\n    }\n    delete it.specification.icon\n    expect(it.specification).toMatchSnapshot()\n    return false\n  },\n}))\n\ntest.ifMac(\"custom background - new way\", () => {\n  const customBackground = \"customBackground.png\"\n  return assertPack(\"test-app-one\", {\n    targets: Platform.MAC.createTarget(),\n    config: {\n      publish: null,\n      mac: {\n        icon: \"customIcon\",\n      },\n      dmg: {\n        background: customBackground,\n        icon: \"foo.icns\",\n        // speed-up test\n        writeUpdateInfo: false,\n      },\n    },\n    effectiveOptionComputed: async it => {\n      expect(it.specification.background).toMatch(new RegExp(`.+${customBackground}$`))\n      expect(it.specification.icon).toEqual(\"foo.icns\")\n      const packager: PlatformPackager<any> = it.packager\n      expect(await packager.getIconPath()).toEqual(path.join(packager.projectDir, \"build\", \"customIcon.icns\"))\n      return true\n    },\n  }, {\n    projectDirCreated: projectDir => Promise.all([\n      copyFile(path.join(getDmgTemplatePath(), \"background.tiff\"), path.join(projectDir, customBackground)),\n      // copy, but not rename to test that default icon is not used\n      copyFile(path.join(projectDir, \"build\", \"icon.icns\"), path.join(projectDir, \"build\", \"customIcon.icns\")),\n      copyFile(path.join(projectDir, \"build\", \"icon.icns\"), path.join(projectDir, \"foo.icns\")),\n    ]),\n  })\n})\n\ntest.ifAll.ifMac(\"retina background as 2 png\", () => {\n  return assertPack(\"test-app-one\", {\n    targets: Platform.MAC.createTarget(),\n    config: {\n      publish: null,\n    },\n    effectiveOptionComputed: async it => {\n      expect(it.specification.background).toMatch(/\\.tiff$/)\n      return true\n    },\n  }, {\n    projectDirCreated: async projectDir => {\n      const resourceDir = path.join(projectDir, \"build\")\n      await copyFile(path.join(getDmgTemplatePath(), \"background.tiff\"), path.join(resourceDir, \"background.tiff\"))\n\n      async function extractPng(index: number, suffix: string) {\n        await exec(\"tiffutil\", [\"-extract\", index.toString(), path.join(getDmgTemplatePath(), \"background.tiff\")], {\n          cwd: projectDir\n        })\n        await exec(\"sips\", [\"-s\", \"format\", \"png\", \"out.tiff\", \"--out\", `background${suffix}.png`], {\n          cwd: projectDir\n        })\n      }\n\n      await extractPng(0, \"\")\n      await extractPng(1, \"@2x\")\n      await fs.unlink(path.join(resourceDir, \"background.tiff\"))\n    },\n  })\n})\n\ntest.ifMac.ifAll(\"no Applications link\", () => {\n  return assertPack(\"test-app-one\", {\n    targets: Platform.MAC.createTarget(),\n    config: {\n      publish: null,\n      productName: \"NoApplicationsLink\",\n      dmg: {\n        contents: [\n          {\n            x: 110,\n            y: 150\n          },\n          {\n            x: 410,\n            y: 440,\n            type: \"link\",\n            path: \"/Applications/TextEdit.app\"\n          }\n        ],\n      },\n    },\n    effectiveOptionComputed: async it => {\n      if (!(\"volumePath\" in it)) {\n        return false\n      }\n\n      const volumePath = it.volumePath\n      await Promise.all([\n        assertThat(path.join(volumePath, \".background\", \"background.tiff\")).isFile(),\n        assertThat(path.join(volumePath, \"Applications\")).doesNotExist(),\n        assertThat(path.join(volumePath, \"TextEdit.app\")).isSymbolicLink(),\n        assertThat(path.join(volumePath, \"TextEdit.app\")).isDirectory(),\n      ])\n      expect(it.specification.contents).toMatchSnapshot()\n      return false\n    },\n  })\n})\n\ntest.ifMac(\"unset dmg icon\", app({\n  targets: dmgTarget,\n  config: {\n    publish: null,\n    // dmg can mount only one volume name, so, to test in parallel, we set different product name\n    productName: \"Test ß No Volume Icon\",\n    dmg: {\n      icon: null,\n    }\n  }\n}, {\n  packed: context => {\n    return attachAndExecute(path.join(context.outDir, \"Test ß No Volume Icon-1.1.0.dmg\"), false, () => {\n      return Promise.all([\n        assertThat(path.join(\"/Volumes/Test ß No Volume Icon 1.1.0/.background/background.tiff\")).isFile(),\n        assertThat(path.join(\"/Volumes/Test ß No Volume Icon 1.1.0/.VolumeIcon.icns\")).doesNotExist(),\n      ])\n    })\n  }\n}))\n\n// test also \"only dmg\"\ntest.ifMac(\"no background\", app({\n  targets: dmgTarget,\n  config: {\n    publish: null,\n    // dmg can mount only one volume name, so, to test in parallel, we set different product name\n    productName: \"NoBackground\",\n    dmg: {\n      background: null,\n      title: \"Foo\",\n    },\n  }\n}, {\n  packed: context => {\n    return attachAndExecute(path.join(context.outDir, \"NoBackground-1.1.0.dmg\"), false, () => {\n      return assertThat(path.join(\"/Volumes/NoBackground 1.1.0/.background\")).doesNotExist()\n    })\n  }\n}))\n\n// test also darkModeSupport\ntest.ifAll.ifMac(\"bundleShortVersion\", app({\n  targets: dmgTarget,\n  config: {\n    publish: null,\n    // dmg can mount only one volume name, so, to test in parallel, we set different product name\n    productName: \"BundleShortVersion\",\n    mac: {\n      bundleShortVersion: \"2017.1-alpha5\",\n      darkModeSupport: true,\n    },\n  }\n}))\n\ntest.ifAll.ifMac(\"disable dmg icon (light), bundleVersion\", () => {\n  return assertPack(\"test-app-one\", {\n    targets: Platform.MAC.createTarget(),\n    config: {\n      publish: null,\n      dmg: {\n        icon: null,\n      },\n      mac: {\n        bundleVersion: \"50\"\n      },\n    },\n    effectiveOptionComputed: async it => {\n      expect(it.specification.icon).toBeNull()\n      expect(it.packager.appInfo.buildVersion).toEqual(\"50\")\n      expect(await it.packager.getIconPath()).not.toBeNull()\n      return true\n    },\n  })\n})\n\nconst packagerOptions = {\n  targets: dmgTarget,\n  config: {\n    publish: null,\n  }\n}\n\ntest.ifAll.ifMac(\"multi language license\", app(packagerOptions, {\n  projectDirCreated: projectDir => {\n    return Promise.all([\n      // writeFile(path.join(projectDir, \"build\", \"license_en.txt\"), \"Hi\"),\n      fs.writeFile(path.join(projectDir, \"build\", \"license_de.txt\"), \"Hallo\"),\n      fs.writeFile(path.join(projectDir, \"build\", \"license_ru.txt\"), \"Привет\"),\n    ])\n  },\n}))\n\ntest.ifAll.ifMac(\"license ru\", app(packagerOptions, {\n  projectDirCreated: projectDir => {\n    return fs.writeFile(path.join(projectDir, \"build\", \"license_ru.txt\"), \"Привет\".repeat(12))\n  },\n}))\n\ntest.ifAll.ifMac(\"license en\", app(packagerOptions, {\n  projectDirCreated: projectDir => {\n    return copyTestAsset(\"license_en.txt\", path.join(projectDir, \"build\", \"license_en.txt\"))\n  },\n}))\n\ntest.ifAll.ifMac(\"license rtf\", app(packagerOptions, {\n  projectDirCreated: projectDir => {\n    return copyTestAsset(\"license_de.rtf\", path.join(projectDir, \"build\", \"license_de.rtf\"))\n  },\n}))\n\ntest.ifAll.ifMac(\"license buttons config\", app({\n  ...packagerOptions,\n  effectiveOptionComputed: async it => {\n    if (\"licenseData\" in it) {\n      expect(it.licenseData).toMatchSnapshot()\n    }\n    return false\n  },\n}, {\n  projectDirCreated: projectDir => Promise.all([\n    copyTestAsset(\"license_en.txt\", path.join(projectDir, \"build\", \"license_en.txt\")),\n    copyTestAsset(\"license_fr.txt\", path.join(projectDir, \"build\", \"license_fr.txt\")),\n    copyTestAsset(\"license_ja.txt\", path.join(projectDir, \"build\", \"license_ja.txt\")),\n    copyTestAsset(\"license_ko.txt\", path.join(projectDir, \"build\", \"license_ko.txt\")),\n    copyTestAsset(\"licenseButtons_en.yml\", path.join(projectDir, \"build\", \"licenseButtons_en.yml\")),\n    copyTestAsset(\"licenseButtons_fr.json\", path.join(projectDir, \"build\", \"licenseButtons_fr.json\")),\n    copyTestAsset(\"licenseButtons_ja.json\", path.join(projectDir, \"build\", \"licenseButtons_ja.json\")),\n    copyTestAsset(\"licenseButtons_ko.json\", path.join(projectDir, \"build\", \"licenseButtons_ko.json\"))\n  ]),\n}))"]}