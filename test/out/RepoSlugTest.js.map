{"version":3,"file":"RepoSlugTest.js","sourceRoot":"","sources":["../src/RepoSlugTest.ts"],"names":[],"mappings":";;AAAA,4EAA2E;AAE3E,SAAS,SAAS,CAAC,IAAS;IAC1B,OAAO,IAAI,CAAC,SAAS,CAAA;IACrB,OAAO,IAAI,CAAC,YAAY,CAAA;IACxB,OAAO,IAAI,CAAC,aAAa,CAAA;IACzB,OAAO,IAAI,CAAC,YAAY,CAAA;IACxB,OAAO,IAAI,CAAC,YAAY,CAAA;IACxB,OAAO,IAAI,CAAC,IAAI,CAAA;IAChB,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAA;AAChC,CAAC;AAED,IAAI,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;IACjD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAA;IAC7C,IAAI;QACF,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,wBAAwB,CAAA;QACvD,MAAM,IAAI,GAAQ,MAAM,kCAAiB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAA;QACxD,SAAS,CAAC,IAAI,CAAC,CAAA;KAChB;YACO;QACN,IAAI,QAAQ,IAAI,IAAI,EAAE;YACpB,UAAU,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAA;SACzC;KACF;AACH,CAAC,CAAC,CAAA;AAEF,IAAI,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;IACzC,MAAM,mBAAmB,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAA;IAC1D,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAA;IAC/C,IAAI;QACF,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,OAAO,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAA;SACpC;QAED,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,wBAAwB,CAAA;QACzD,MAAM,IAAI,GAAG,MAAM,kCAAiB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAA;QACnD,SAAS,CAAC,IAAI,CAAC,CAAA;KAChB;YACO;QACN,UAAU,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAA;QACrD,IAAI,UAAU,IAAI,IAAI,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,UAAU,CAAA;SAC1C;KACF;AACH,CAAC,CAAC,CAAA;AAEF,SAAS,UAAU,CAAC,IAAY,EAAE,KAAyB;IACzD,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,oDAAoD;QACpD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAA;KAC1B;AACH,CAAC","sourcesContent":["import { getRepositoryInfo } from \"app-builder-lib/out/util/repositoryInfo\"\n\nfunction checkInfo(info: any) {\n  delete info.pathmatch\n  delete info.pathtemplate\n  delete info.httpstemplate\n  delete info.filetemplate\n  delete info.docstemplate\n  delete info.opts\n  expect(info).toMatchSnapshot()\n}\n\ntest(\"repo slug from TRAVIS_REPO_SLUG\", async () => {\n  const oldValue = process.env.TRAVIS_REPO_SLUG\n  try {\n    process.env.TRAVIS_REPO_SLUG = \"travis-ci/travis-build\"\n    const info: any = await getRepositoryInfo(process.cwd())\n    checkInfo(info)\n  }\n  finally {\n    if (oldValue != null) {\n      restoreEnv(\"TRAVIS_REPO_SLUG\", oldValue)\n    }\n  }\n})\n\ntest(\"repo slug from APPVEYOR\", async () => {\n  const oldAppveyorRepoName = process.env.APPVEYOR_REPO_NAME\n  const travisSlug = process.env.TRAVIS_REPO_SLUG\n  try {\n    if (travisSlug != null) {\n      delete process.env.TRAVIS_REPO_SLUG\n    }\n\n    process.env.APPVEYOR_REPO_NAME = \"travis-ci/travis-build\"\n    const info = await getRepositoryInfo(process.cwd())\n    checkInfo(info)\n  }\n  finally {\n    restoreEnv(\"APPVEYOR_REPO_NAME\", oldAppveyorRepoName)\n    if (travisSlug != null) {\n      process.env.TRAVIS_REPO_SLUG = travisSlug\n    }\n  }\n})\n\nfunction restoreEnv(name: string, value: string | undefined) {\n  if (value != null) {\n    // otherwise will be set to string value \"undefined\"\n    process.env[name] = value\n  }\n}"]}