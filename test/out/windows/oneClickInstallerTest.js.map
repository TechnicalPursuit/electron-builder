{"version":3,"file":"oneClickInstallerTest.js","sourceRoot":"","sources":["../../src/windows/oneClickInstallerTest.ts"],"names":[],"mappings":"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","sourcesContent":["import { Arch, Platform } from \"electron-builder\"\nimport { copyFile, writeFile } from \"fs-extra\"\nimport * as path from \"path\"\nimport { assertThat } from \"../helpers/fileAssert\"\nimport { app, assertPack, copyTestAsset, modifyPackageJson } from \"../helpers/packTester\"\nimport { checkHelpers, doTest, expectUpdateMetadata } from \"../helpers/winHelper\"\n\nconst nsisTarget = Platform.WINDOWS.createTarget([\"nsis\"])\n\ntest(\"one-click\", app({\n  targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.x64),\n  config: {\n    publish: {\n      provider: \"bintray\",\n      owner: \"actperepo\",\n      package: \"TestApp\",\n    },\n    nsis: {\n      deleteAppDataOnUninstall: true,\n      packElevateHelper: false\n    },\n  }\n}, {\n  signedWin: true,\n  packed: async context => {\n    await checkHelpers(context.getResources(Platform.WINDOWS, Arch.x64), false)\n    await doTest(context.outDir, true, \"TestApp Setup\", \"TestApp\", null, false)\n    await expectUpdateMetadata(context, Arch.x64, true)\n  }\n}))\n\ntest.ifAll(\"custom guid\", app({\n  targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.ia32),\n  config: {\n    appId: \"boo\",\n    productName: \"boo Hub\",\n    publish: null,\n    nsis: {\n      guid: \"Foo Technologies\\\\Bar\"\n    },\n  }\n}))\n\ntest.ifAll.ifNotCiMac(\"multi language license\", app({\n  targets: Platform.WINDOWS.createTarget(\"nsis\"),\n  config: {\n    publish: null,\n    nsis: {\n      uninstallDisplayName: \"Hi!!!\",\n      createDesktopShortcut: false,\n    },\n  },\n}, {\n  projectDirCreated: projectDir => {\n    return Promise.all([\n      writeFile(path.join(projectDir, \"build\", \"license_en.txt\"), \"Hi\"),\n      writeFile(path.join(projectDir, \"build\", \"license_ru.txt\"), \"Привет\"),\n      writeFile(path.join(projectDir, \"build\", \"license_ko.txt\"), \"Привет\"),\n      writeFile(path.join(projectDir, \"build\", \"license_fi.txt\"), \"Привет\"),\n    ])\n  },\n}))\n\ntest.ifAll.ifNotCiMac(\"html license\", app({\n  targets: Platform.WINDOWS.createTarget(\"nsis\"),\n  config: {\n    publish: null,\n    nsis: {\n      uninstallDisplayName: \"Hi!!!\",\n      createDesktopShortcut: false,\n    }\n  },\n}, {\n  projectDirCreated: projectDir => {\n    return Promise.all([\n      writeFile(path.join(projectDir, \"build\", \"license.html\"), '<html><body><p>Hi <a href=\"https://google.com\" target=\"_blank\">google</a></p></body></html>'),\n    ])\n  },\n}))\n\ntest.ifAll.ifDevOrWinCi(\"createDesktopShortcut always\", app({\n  targets: Platform.WINDOWS.createTarget(\"nsis\"),\n  config: {\n    publish: null,\n    nsis: {\n      createDesktopShortcut: \"always\",\n    }\n  },\n}))\n\ntest.ifDevOrLinuxCi(\"perMachine, no run after finish\", app({\n  targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.ia32),\n  config: {\n    // wine creates incorrect file names and registry entries for unicode, so, we use ASCII\n    productName: \"TestApp\",\n    fileAssociations: [\n      {\n        ext: \"foo\",\n        name: \"Test Foo\",\n      }\n    ],\n    nsis: {\n      perMachine: true,\n      runAfterFinish: false,\n    },\n    publish: {\n      provider: \"generic\",\n      // tslint:disable:no-invalid-template-strings\n      url: \"https://develar.s3.amazonaws.com/test/${os}/${arch}\",\n    },\n    win: {\n      electronUpdaterCompatibility: \">=2.16\",\n    },\n  },\n}, {\n  projectDirCreated: projectDir => {\n    return Promise.all([\n      copyTestAsset(\"headerIcon.ico\", path.join(projectDir, \"build\", \"foo test space.ico\")),\n      copyTestAsset(\"license.txt\", path.join(projectDir, \"build\", \"license.txt\")),\n    ])\n  },\n  packed: async context => {\n    await expectUpdateMetadata(context)\n    await checkHelpers(context.getResources(Platform.WINDOWS, Arch.ia32), true)\n    await doTest(context.outDir, false)\n  },\n}))\n\ntest.ifNotCiMac(\"installerHeaderIcon\", () => {\n  let headerIconPath: string | null = null\n  return assertPack(\"test-app-one\", {\n      targets: nsisTarget,\n      effectiveOptionComputed: async it => {\n        const defines = it[0]\n        expect(defines.HEADER_ICO).toEqual(headerIconPath)\n        return false\n      }\n    }, {\n      projectDirCreated: projectDir => {\n        headerIconPath = path.join(projectDir, \"build\", \"installerHeaderIcon.ico\")\n        return Promise.all([copyTestAsset(\"headerIcon.ico\", headerIconPath), copyTestAsset(\"headerIcon.ico\", path.join(projectDir, \"build\", \"uninstallerIcon.ico\"))])\n      }\n    }\n  )\n})\n\ntest.ifDevOrLinuxCi(\"custom include\", app({targets: nsisTarget}, {\n  projectDirCreated: projectDir => copyTestAsset(\"installer.nsh\", path.join(projectDir, \"build\", \"installer.nsh\")),\n  packed: context => Promise.all([\n    assertThat(path.join(context.projectDir, \"build\", \"customHeader\")).isFile(),\n    assertThat(path.join(context.projectDir, \"build\", \"customInit\")).isFile(),\n    assertThat(path.join(context.projectDir, \"build\", \"customInstall\")).isFile(),\n  ]),\n}))\n\ntest.skip(\"big file pack\", app(\n  {\n    targets: nsisTarget,\n    config: {\n      extraResources: [\"**/*.mov\"],\n      nsis: {\n        differentialPackage: false,\n      },\n    },\n  }, {\n  projectDirCreated: async projectDir => {\n    await copyFile(\"/Volumes/Pegasus/15.02.18.m4v\", path.join(projectDir, \"foo/bar/video.mov\"))\n  },\n}))\n\ntest.ifDevOrLinuxCi(\"custom script\", app({targets: nsisTarget}, {\n  projectDirCreated: projectDir => copyTestAsset(\"installer.nsi\", path.join(projectDir, \"build\", \"installer.nsi\")),\n  packed: context => assertThat(path.join(context.projectDir, \"build\", \"customInstallerScript\")).isFile(),\n}))\n\ntest.ifAll.ifNotCiMac(\"menuCategory\", app({\n  targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.ia32),\n  config: {\n    extraMetadata: {\n      name: \"test-menu-category\",\n      productName: \"Test Menu Category\"\n    },\n    publish: null,\n    nsis: {\n      oneClick: false,\n      menuCategory: true,\n      artifactName: \"${productName} CustomName ${version}.${ext}\"\n    },\n  }\n}, {\n  projectDirCreated: projectDir => modifyPackageJson(projectDir, data => {\n    data.name = \"test-menu-category\"\n  }),\n  packed: context => {\n    return doTest(context.outDir, false, \"Test Menu Category\", \"test-menu-category\", \"Foo Bar\")\n  }\n}))\n\ntest.ifNotCiMac(\"string menuCategory\", app({\n  targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.ia32),\n  config: {\n    extraMetadata: {\n      name: \"test-menu-category\",\n      productName: \"Test Menu Category '\"\n    },\n    publish: null,\n    nsis: {\n      oneClick: false,\n      runAfterFinish: false,\n      menuCategory: \"Foo/Bar\",\n      // tslint:disable-next-line:no-invalid-template-strings\n      artifactName: \"${productName} CustomName ${version}.${ext}\"\n    },\n  }\n}, {\n  projectDirCreated: projectDir => modifyPackageJson(projectDir, data => {\n    data.name = \"test-menu-category\"\n  }),\n  packed: async context => {\n    await doTest(context.outDir, false, \"Test Menu Category\", \"test-menu-category\", \"Foo Bar\")\n  }\n}))\n\ntest.ifDevOrLinuxCi(\"file associations per user\", app({\n  targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.ia32),\n  config: {\n    publish: null,\n    fileAssociations: [\n      {\n        ext: \"foo\",\n        name: \"Test Foo\",\n      }\n    ],\n  },\n}))"]}