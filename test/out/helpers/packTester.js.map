{"version":3,"file":"packTester.js","sourceRoot":"","sources":["../../src/helpers/packTester.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7x, path7za } from \"7zip-bin\"\nimport { addValue, deepAssign, exec, log, spawn } from \"builder-util\"\nimport { CancellationToken } from \"builder-util-runtime\"\nimport { copyDir, FileCopier, USE_HARD_LINKS, walk } from \"builder-util/out/fs\"\nimport { executeFinally } from \"builder-util/out/promise\"\nimport DecompressZip from \"decompress-zip\"\nimport { Arch, ArtifactCreated, Configuration, DIR_TARGET, getArchSuffix, MacOsTargetName, Packager, PackagerOptions, Platform, Target } from \"electron-builder\"\nimport { PublishManager } from \"app-builder-lib\"\nimport { computeArchToTargetNamesMap } from \"app-builder-lib/out/targets/targetFactory\"\nimport { getLinuxToolsPath } from \"app-builder-lib/out/targets/tools\"\nimport { convertVersion } from \"electron-builder-squirrel-windows/out/squirrelPack\"\nimport { PublishPolicy } from \"electron-publish\"\nimport { emptyDir, writeJson } from \"fs-extra\"\nimport { promises as fs } from \"fs\"\nimport { safeLoad } from \"js-yaml\"\nimport * as path from \"path\"\nimport { promisify } from \"util\"\nimport pathSorter from \"path-sort\"\nimport { TmpDir } from \"temp-file\"\nimport { readAsar } from \"app-builder-lib/out/asar/asar\"\nimport { executeAppBuilderAsJson } from \"app-builder-lib/out/util/appBuilder\"\nimport { CSC_LINK, WIN_CSC_LINK } from \"./codeSignData\"\nimport { assertThat } from \"./fileAssert\"\n\nif (process.env.TRAVIS !== \"true\") {\n  process.env.CIRCLE_BUILD_NUM = \"42\"\n}\n\nexport const linuxDirTarget = Platform.LINUX.createTarget(DIR_TARGET)\nexport const snapTarget = Platform.LINUX.createTarget(\"snap\")\n\nexport interface AssertPackOptions {\n  readonly projectDirCreated?: (projectDir: string, tmpDir: TmpDir) => Promise<any>\n  readonly packed?: (context: PackedContext) => Promise<any>\n  readonly expectedArtifacts?: Array<string>\n\n  readonly checkMacApp?: (appDir: string, info: any) => Promise<any>\n\n  readonly useTempDir?: boolean\n  readonly signed?: boolean\n  readonly signedWin?: boolean\n\n  readonly isInstallDepsBefore?: boolean\n\n  readonly publish?: PublishPolicy\n\n  readonly tmpDir?: TmpDir\n}\n\nexport interface PackedContext {\n  readonly projectDir: string,\n  readonly outDir: string\n\n  readonly getResources: (platform: Platform, arch?: Arch) => string\n  readonly getContent: (platform: Platform) => string\n\n  readonly packager: Packager\n\n  readonly tmpDir: TmpDir\n}\n\nexport function appThrows(packagerOptions: PackagerOptions, checkOptions: AssertPackOptions = {}, customErrorAssert?: (error: Error) => void) {\n  return () => assertThat(assertPack(\"test-app-one\", packagerOptions, checkOptions)).throws(customErrorAssert)\n}\n\nexport function appTwoThrows(packagerOptions: PackagerOptions, checkOptions: AssertPackOptions = {}) {\n  return () => assertThat(assertPack(\"test-app\", packagerOptions, checkOptions)).throws()\n}\n\nexport function app(packagerOptions: PackagerOptions, checkOptions: AssertPackOptions = {}) {\n  return () => assertPack(packagerOptions.config != null && (packagerOptions.config as any).protonNodeVersion != null ? \"proton\" : \"test-app-one\", packagerOptions, checkOptions)\n}\n\nexport function appTwo(packagerOptions: PackagerOptions, checkOptions: AssertPackOptions = {}) {\n  return () => assertPack(\"test-app\", packagerOptions, checkOptions)\n}\n\nexport async function assertPack(fixtureName: string, packagerOptions: PackagerOptions, checkOptions: AssertPackOptions = {}): Promise<void> {\n  let configuration = packagerOptions.config as Configuration\n  if (configuration == null) {\n    configuration = {};\n    (packagerOptions as any).config = configuration\n  }\n\n  if (checkOptions.signed) {\n    packagerOptions = signed(packagerOptions)\n  }\n  if (checkOptions.signedWin) {\n    configuration.cscLink = WIN_CSC_LINK\n    configuration.cscKeyPassword = \"\"\n  }\n  else if ((configuration as Configuration).cscLink == null) {\n    packagerOptions = deepAssign({}, packagerOptions, {config: {mac: {identity: null}}})\n  }\n\n  const projectDirCreated = checkOptions.projectDirCreated\n  let projectDir = path.join(__dirname, \"..\", \"..\", \"fixtures\", fixtureName)\n  // const isDoNotUseTempDir = platform === \"darwin\"\n  const customTmpDir = process.env.TEST_APP_TMP_DIR\n  const tmpDir = checkOptions.tmpDir || new TmpDir(`pack-tester: ${fixtureName}`)\n  // non-macOS test uses the same dir as macOS test, but we cannot share node_modules (because tests executed in parallel)\n  const dir = customTmpDir == null ? await tmpDir.createTempDir({prefix: \"test-project\"}) : path.resolve(customTmpDir)\n  if (customTmpDir != null) {\n    await emptyDir(dir)\n    log.info({customTmpDir}, \"custom temp dir used\")\n  }\n\n  await copyDir(projectDir, dir, {\n    filter: it => {\n      const basename = path.basename(it)\n      // if custom project dir specified, copy node_modules (i.e. do not ignore it)\n      return (packagerOptions.projectDir != null || basename !== \"node_modules\") && (!basename.startsWith(\".\") || basename === \".babelrc\")\n    },\n    isUseHardLink: USE_HARD_LINKS,\n  })\n  projectDir = dir\n\n  await executeFinally((async () => {\n    if (projectDirCreated != null) {\n      await projectDirCreated(projectDir, tmpDir)\n    }\n\n    if (checkOptions.isInstallDepsBefore) {\n      // bin links required (e.g. for node-pre-gyp - if package refers to it in the install script)\n      await spawn(process.platform === \"win32\" ? \"npm.cmd\" : \"npm\", [\"install\", \"--production\"], {\n        cwd: projectDir,\n      })\n    }\n\n    if (packagerOptions.projectDir != null) {\n      packagerOptions.projectDir = path.resolve(projectDir, packagerOptions.projectDir)\n    }\n\n    const {packager, outDir} = await packAndCheck({\n      projectDir,\n      ...packagerOptions\n    }, checkOptions)\n\n    if (checkOptions.packed != null) {\n      const base = function (platform: Platform, arch?: Arch): string {\n        return path.join(outDir, `${platform.buildConfigurationKey}${getArchSuffix(arch == null ? Arch.x64 : arch)}${platform === Platform.MAC ? \"\" : \"-unpacked\"}`)\n      }\n\n      await checkOptions.packed({\n        projectDir,\n        outDir,\n        getResources: (platform, arch) => path.join(base(platform, arch), \"resources\"),\n        getContent: platform => base(platform),\n        packager,\n        tmpDir,\n      })\n    }\n  })(), (): any => tmpDir === checkOptions.tmpDir ? null : tmpDir.cleanup())\n}\n\nconst fileCopier = new FileCopier()\n\nexport function copyTestAsset(name: string, destination: string): Promise<void> {\n  return fileCopier.copy(path.join(getFixtureDir(), name), destination, undefined)\n}\n\nexport function getFixtureDir() {\n  return path.join(__dirname, \"..\", \"..\", \"fixtures\")\n}\n\nasync function packAndCheck(packagerOptions: PackagerOptions, checkOptions: AssertPackOptions) {\n  const cancellationToken = new CancellationToken()\n  const packager = new Packager(packagerOptions, cancellationToken)\n  const publishManager = new PublishManager(packager, {publish: \"publish\" in checkOptions ? checkOptions.publish : \"never\"})\n\n  const artifacts: Map<Platform, Array<ArtifactCreated>> = new Map()\n  packager.artifactCreated(event => {\n    if (event.file == null) {\n      return\n    }\n\n    assertThat(event.file).isAbsolute()\n    addValue(artifacts, event.packager.platform, event)\n  })\n\n  const {outDir, platformToTargets} = await packager.build()\n  await publishManager.awaitTasks()\n\n  if (packagerOptions.platformPackagerFactory != null) {\n    return {packager, outDir}\n  }\n\n  function sortKey(a: ArtifactCreated) {\n    return `${a.target == null ? \"no-target\" : a.target.name}:${a.file == null ? a.fileContent!!.toString(\"hex\") : path.basename(a.file)}`\n  }\n\n  const objectToCompare: any = {}\n  for (const platform of packagerOptions.targets!!.keys()) {\n    objectToCompare[platform.buildConfigurationKey] = await Promise.all((artifacts.get(platform) || []).sort((a, b) => sortKey(a).localeCompare(sortKey(b))).map(async it => {\n      const result: any = {...it}\n      const file = result.file\n      if (file != null) {\n        if (file.endsWith(\".yml\")) {\n          result.fileContent = removeUnstableProperties(safeLoad(await fs.readFile(file, \"utf-8\")))\n        }\n        result.file = path.basename(file)\n      }\n      const updateInfo = result.updateInfo\n      if (updateInfo != null) {\n        result.updateInfo = removeUnstableProperties(updateInfo)\n      }\n      else if (updateInfo === null) {\n        delete result.updateInfo\n      }\n\n      // reduce snapshot - avoid noise\n      if (result.safeArtifactName == null) {\n        delete result.safeArtifactName\n      }\n      if (result.updateInfo == null) {\n        delete result.updateInfo\n      }\n      if (result.arch == null) {\n        delete result.arch\n      }\n      else {\n        result.arch = Arch[result.arch]\n      }\n\n      if (Buffer.isBuffer(result.fileContent)) {\n        delete result.fileContent\n      }\n\n      delete result.isWriteUpdateInfo\n      delete result.packager\n      delete result.target\n      delete result.publishConfig\n      return result\n    }))\n  }\n\n  expect(objectToCompare).toMatchSnapshot()\n\n  c: for (const [platform, archToType] of packagerOptions.targets!!) {\n    for (const [arch, targets] of computeArchToTargetNamesMap(archToType, {platformSpecificBuildOptions: (packagerOptions as any)[platform.buildConfigurationKey] || {}, defaultTarget: []} as any, platform)) {\n      if (targets.length === 1 && targets[0] === DIR_TARGET) {\n        continue c\n      }\n\n      const nameToTarget = platformToTargets.get(platform)!!\n      if (platform === Platform.MAC) {\n        const packedAppDir = path.join(outDir, nameToTarget.has(\"mas-dev\") ? \"mas-dev\" : (nameToTarget.has(\"mas\") ? \"mas\" : \"mac\"), `${packager.appInfo.productFilename}.app`)\n        await checkMacResult(packager, packagerOptions, checkOptions, packedAppDir)\n      }\n      else if (platform === Platform.LINUX) {\n        await checkLinuxResult(outDir, packager, arch, nameToTarget)\n      }\n      else if (platform === Platform.WINDOWS) {\n        await checkWindowsResult(packager, checkOptions, artifacts.get(platform)!!, nameToTarget)\n      }\n    }\n  }\n\n  return {packager, outDir}\n}\n\nasync function checkLinuxResult(outDir: string, packager: Packager, arch: Arch, nameToTarget: Map<string, Target>) {\n  if (!nameToTarget.has(\"deb\")) {\n    return\n  }\n\n  const appInfo = packager.appInfo\n  const packageFile = `${outDir}/TestApp_${appInfo.version}_${arch === Arch.ia32 ? \"i386\" : (arch === Arch.x64 ? \"amd64\" : \"armv7l\")}.deb`\n  expect(await getContents(packageFile)).toMatchSnapshot()\n  if (arch === Arch.ia32) {\n    expect(await getContents(`${outDir}/TestApp_${appInfo.version}_i386.deb`)).toMatchSnapshot()\n  }\n\n  const control = parseDebControl((await execShell(`ar p '${packageFile}' control.tar.gz | ${await getTarExecutable()} zx --to-stdout ./control`, {\n      maxBuffer: 10 * 1024 * 1024,\n    })).stdout)\n\n  delete control.Version\n  delete control.Size\n  const description = control.Description\n  delete control.Description\n  expect(control).toMatchSnapshot()\n  // strange difference on linux and mac (no leading space on Linux)\n  expect(description.trim()).toMatchSnapshot()\n}\n\nfunction parseDebControl(info: string): any {\n  const regexp = /([\\w]+): *(.+\\n)([^:\\n]+\\n)?/g\n  let match: Array<string> | null\n  const metadata: any = {}\n  info = info.substring(info.indexOf(\"Package:\"))\n  while ((match = regexp.exec(info)) !== null) {\n    let value = match[2]\n    if (match[3] != null) {\n      value += match[3]\n    }\n\n    if (value[value.length - 1] === \"\\n\") {\n      value = value.substring(0, value.length - 1)\n    }\n    metadata[match[1]] = value\n  }\n  return metadata\n}\n\nasync function checkMacResult(packager: Packager, packagerOptions: PackagerOptions, checkOptions: AssertPackOptions, packedAppDir: string) {\n  const appInfo = packager.appInfo\n  const info = (await executeAppBuilderAsJson<Array<any>>([\"decode-plist\", \"-f\", path.join(packedAppDir, \"Contents\", \"Info.plist\")]))[0]\n\n  expect(info).toMatchObject({\n    CFBundleVersion: info.CFBundleVersion === \"50\" ? \"50\" : `${appInfo.version}.${(process.env.TRAVIS_BUILD_NUMBER || process.env.CIRCLE_BUILD_NUM)}`\n  })\n\n  // checked manually, remove to avoid mismatch on CI server (where TRAVIS_BUILD_NUMBER is defined and different on each test run)\n  delete info.AsarIntegrity\n  delete info.CFBundleVersion\n  delete info.BuildMachineOSBuild\n  delete info.NSHumanReadableCopyright\n  delete info.DTXcode\n  delete info.DTXcodeBuild\n  delete info.DTSDKBuild\n  delete info.DTSDKName\n  delete info.DTCompiler\n  delete info.ElectronTeamID\n  delete info.NSMainNibFile\n  delete info.NSCameraUsageDescription\n  delete info.NSMicrophoneUsageDescription\n  delete info.NSRequiresAquaSystemAppearance\n  delete info.NSQuitAlwaysKeepsWindows\n  if (info.NSAppTransportSecurity != null) {\n    delete info.NSAppTransportSecurity.NSAllowsArbitraryLoads\n  }\n  // test value\n  if (info.LSMinimumSystemVersion !== \"10.12.0\") {\n    delete info.LSMinimumSystemVersion\n  }\n\n  expect(info).toMatchSnapshot()\n\n  const checksumData = info.AsarIntegrity\n  if (checksumData != null) {\n    const data = JSON.parse(checksumData)\n    const checksums = data.checksums\n    for (const name of Object.keys(checksums)) {\n      checksums[name] = \"hash\"\n    }\n    info.AsarIntegrity = JSON.stringify(data)\n  }\n\n  if (checkOptions.checkMacApp != null) {\n    await checkOptions.checkMacApp(packedAppDir, info)\n  }\n\n  if (packagerOptions.config != null && (packagerOptions.config as Configuration).cscLink != null) {\n    const result = await exec(\"codesign\", [\"--verify\", packedAppDir])\n    expect(result).not.toMatch(/is not signed at all/)\n  }\n}\n\nasync function checkWindowsResult(packager: Packager, checkOptions: AssertPackOptions, artifacts: Array<ArtifactCreated>, nameToTarget: Map<string, Target>) {\n  const appInfo = packager.appInfo\n  let squirrel = false\n  for (const target of nameToTarget.keys()) {\n    if (target === \"squirrel\") {\n      squirrel = true\n      break\n    }\n  }\n  if (!squirrel) {\n    return\n  }\n\n  const packageFile = artifacts.find(it => it.file!!.endsWith(\"-full.nupkg\"))!.file!!\n  const unZipper = new DecompressZip(packageFile!!)\n  const fileDescriptors = await unZipper.getFiles()\n\n  // we test app-update.yml separately, don't want to complicate general assert (yes, it is not good that we write app-update.yml for squirrel.windows if we build nsis and squirrel.windows in parallel, but as squirrel.windows is deprecated, it is ok)\n  const files = pathSorter(fileDescriptors.map(it => toSystemIndependentPath(it.path))\n    .filter(it => (!it.startsWith(\"lib/net45/locales/\") || it === \"lib/net45/locales/en-US.pak\") && !it.endsWith(\".psmdcp\") && !it.endsWith(\"app-update.yml\") && !it.includes(\"/inspector/\")))\n\n  expect(files).toMatchSnapshot()\n\n  if (checkOptions == null) {\n    await unZipper.extractFile(fileDescriptors.filter(it => it.path === \"TestApp.nuspec\")[0], {\n      path: path.dirname(packageFile),\n    })\n    const expectedSpec = (await fs.readFile(path.join(path.dirname(packageFile), \"TestApp.nuspec\"), \"utf8\")).replace(/\\r\\n/g, \"\\n\")\n    // console.log(expectedSpec)\n    expect(expectedSpec).toEqual(`<?xml version=\"1.0\"?>\n<package xmlns=\"http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd\">\n  <metadata>\n    <id>TestApp</id>\n    <version>${convertVersion(appInfo.version)}</version>\n    <title>${appInfo.productName}</title>\n    <authors>Foo Bar</authors>\n    <owners>Foo Bar</owners>\n    <iconUrl>https://raw.githubusercontent.com/szwacz/electron-boilerplate/master/resources/windows/icon.ico</iconUrl>\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\n    <description>Test Application (test quite “ #378)</description>\n    <copyright>Copyright © ${new Date().getFullYear()} Foo Bar</copyright>\n    <projectUrl>http://foo.example.com</projectUrl>\n  </metadata>\n</package>`)\n  }\n}\n\nexport const execShell: any = promisify(require(\"child_process\").exec)\n\nexport async function getTarExecutable() {\n  return process.platform === \"darwin\" ? path.join(await getLinuxToolsPath(), \"bin\", \"gtar\") : \"tar\"\n}\n\nasync function getContents(packageFile: string) {\n  const result = await execShell(`ar p '${packageFile}' data.tar.xz | ${await getTarExecutable()} -t -I'${path7x}'`, {\n    maxBuffer: 10 * 1024 * 1024,\n    env: {\n      ...process.env,\n      SZA_PATH: path7za,\n    }\n  })\n\n  const contents = parseFileList(result.stdout, true)\n  return pathSorter(contents.filter(it => !(it.includes(`/locales/`) || it.includes(`/libgcrypt`) || it.includes(\"/inspector/\"))))\n}\n\nexport function parseFileList(data: string, fromDpkg: boolean): Array<string> {\n  return data\n    .split(\"\\n\")\n    .map(it => it.length === 0 ? null : fromDpkg ? it.substring(it.indexOf(\".\") + 1) : (it.startsWith(\"./\") ? it.substring(2) : (it === \".\" ? null : it)))\n    .filter(it => it != null && it.length > 0) as Array<string>\n}\n\nexport function packageJson(task: (data: any) => void, isApp = false) {\n  return (projectDir: string) => modifyPackageJson(projectDir, task, isApp)\n}\n\nexport async function modifyPackageJson(projectDir: string, task: (data: any) => void, isApp = false): Promise<any> {\n  const file = isApp ? path.join(projectDir, \"app\", \"package.json\") : path.join(projectDir, \"package.json\")\n  const data = await fs.readFile(file, \"utf-8\").then(it => JSON.parse(it))\n  task(data)\n  // because copied as hard link\n  await fs.unlink(file)\n\n  await fs.writeFile(path.join(projectDir, \".yarnrc.yml\"), \"nodeLinker: node-modules\")\n  return await writeJson(file, data)\n}\n\nexport function platform(platform: Platform): PackagerOptions {\n  return {\n    targets: platform.createTarget()\n  }\n}\n\nexport function signed(packagerOptions: PackagerOptions): PackagerOptions {\n  if (process.env.CSC_KEY_PASSWORD == null) {\n    log.warn({reason: \"CSC_KEY_PASSWORD is not defined\"}, \"macOS code signing is not tested\")\n  }\n  else {\n    if (packagerOptions.config == null) {\n      (packagerOptions as any).config = {}\n    }\n    (packagerOptions.config as any).cscLink = CSC_LINK\n  }\n  return packagerOptions\n}\n\nexport function createMacTargetTest(target: Array<MacOsTargetName>, config?: Configuration, isSigned = true) {\n  return app({\n    targets: Platform.MAC.createTarget(),\n    config: {\n      extraMetadata: {\n        repository: \"foo/bar\",\n      } as any,\n      mac: {\n        target,\n      },\n      publish: null,\n      ...config\n    },\n  }, {\n    signed: isSigned,\n    packed: async context => {\n      if (!target.includes(\"tar.gz\")) {\n        return\n      }\n\n      const tempDir = await context.tmpDir.createTempDir({prefix: \"mac-target-test\"})\n      await exec(\"tar\", [\"xf\", path.join(context.outDir, \"Test App ßW-1.1.0-mac.tar.gz\")], {cwd: tempDir})\n      await assertThat(path.join(tempDir, \"Test App ßW.app\")).isDirectory()\n    }\n  })\n}\n\nexport async function checkDirContents(dir: string) {\n  expect((await walk(dir, file => !path.basename(file).startsWith(\".\"))).map(it => toSystemIndependentPath(it.substring(dir.length + 1)))).toMatchSnapshot()\n}\n\nexport function removeUnstableProperties(data: any) {\n  return JSON.parse(JSON.stringify(data, (name, value) => {\n    if (name.includes(\"size\") || name.includes(\"Size\") || name.startsWith(\"sha\") || name === \"releaseDate\") {\n      // to ensure that some property exists\n      return `@${name}`\n    }\n    return value\n  }))\n}\n\nexport async function verifyAsarFileTree(resourceDir: string) {\n  const fs = await readAsar(path.join(resourceDir, \"app.asar\"))\n  // console.log(resourceDir + \" \" + JSON.stringify(fs.header, null, 2))\n  expect(fs.header).toMatchSnapshot()\n}\n\nexport function toSystemIndependentPath(s: string): string {\n  return path.sep === \"/\" ? s : s.replace(/\\\\/g, \"/\")\n}"]}