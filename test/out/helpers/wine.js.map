{"version":3,"file":"wine.js","sourceRoot":"","sources":["../../src/helpers/wine.ts"],"names":[],"mappings":"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","sourcesContent":["import { exec, safeStringifyJson } from \"builder-util\"\nimport { unlinkIfExists } from \"builder-util/out/fs\"\nimport { emptyDir, ensureDir } from \"fs-extra\"\nimport { promises as fs } from \"fs\"\nimport { homedir } from \"os\"\nimport * as path from \"path\"\nimport pathSorter from \"path-sort\"\n\nexport class WineManager {\n  wineDir: string | null = null\n  private winePreparePromise: Promise<any> | null = null\n\n  private env: any\n\n  userDir: string | null = null\n\n  async prepare() {\n    if (this.env != null) {\n      return\n    }\n\n    this.wineDir = path.join(homedir(), \"wine-test\")\n\n    const env = process.env\n    const user = env.SUDO_USER || env.LOGNAME || env.USER || env.LNAME || env.USERNAME || (env.HOME === \"/root\" ? \"root\" : null)\n    if (user == null) {\n      throw new Error(`Cannot determinate user name: ${safeStringifyJson(env)}`)\n    }\n\n    this.userDir = path.join(this.wineDir, \"drive_c\", \"users\", user)\n\n    this.winePreparePromise = this.prepareWine(this.wineDir)\n    this.env = await this.winePreparePromise\n  }\n\n  exec(...args: Array<string>) {\n    return exec(\"wine\", args, {env: this.env})\n  }\n\n  async prepareWine(wineDir: string) {\n    await emptyDir(wineDir)\n    //noinspection SpellCheckingInspection\n    const env = {\n      ...process.env,\n      WINEDLLOVERRIDES: \"winemenubuilder.exe=d\",\n      WINEPREFIX: wineDir,\n    }\n\n    await exec(\"wineboot\", [\"--init\"], {env})\n\n    // regedit often doesn't modify correctly\n    let systemReg = await fs.readFile(path.join(wineDir, \"system.reg\"), \"utf8\")\n    systemReg = systemReg.replace('\"CSDVersion\"=\"Service Pack 3\"', '\"CSDVersion\"=\" \"')\n    systemReg = systemReg.replace('\"CurrentBuildNumber\"=\"2600\"', '\"CurrentBuildNumber\"=\"10240\"')\n    systemReg = systemReg.replace('\"CurrentVersion\"=\"5.1\"', '\"CurrentVersion\"=\"10.0\"')\n    systemReg = systemReg.replace('\"ProductName\"=\"Microsoft Windows XP\"', '\"ProductName\"=\"Microsoft Windows 10\"')\n    // noinspection SpellCheckingInspection\n    systemReg = systemReg.replace('\"CSDVersion\"=dword:00000300', '\"CSDVersion\"=dword:00000000')\n    await fs.writeFile(path.join(wineDir, \"system.reg\"), systemReg)\n\n    // remove links to host OS\n    const userDir = this.userDir!!\n    const desktopDir = path.join(userDir, \"Desktop\")\n    await Promise.all([\n      unlinkIfExists(desktopDir),\n      unlinkIfExists(path.join(userDir, \"My Documents\")),\n      unlinkIfExists(path.join(userDir, \"My Music\")),\n      unlinkIfExists(path.join(userDir, \"My Pictures\")),\n      unlinkIfExists(path.join(userDir, \"My Videos\")),\n    ])\n\n    await ensureDir(desktopDir)\n    return env\n  }\n}\n\nenum ChangeType {\n  ADDED, REMOVED, NO_CHANGE\n}\n\nexport function diff(oldList: Array<string>, newList: Array<string>, rootDir: string) {\n  const delta: any = {\n    added: [],\n    deleted: [],\n  }\n  const deltaMap = new Map<string, ChangeType>()\n  // const objHolder = new Set(oldList)\n  for (const item of oldList) {\n    deltaMap.set(item, ChangeType.REMOVED)\n  }\n\n  for (const item of newList) {\n    // objHolder.add(item)\n    const d = deltaMap.get(item)\n    if (d === ChangeType.REMOVED) {\n      deltaMap.set(item, ChangeType.NO_CHANGE)\n    }\n    else {\n      deltaMap.set(item, ChangeType.ADDED)\n    }\n  }\n\n  for (const [item, changeType] of deltaMap.entries()) {\n    if (changeType === ChangeType.REMOVED) {\n      delta.deleted.push(item.substring(rootDir.length + 1))\n    }\n    else if (changeType === ChangeType.ADDED) {\n      delta.added.push(item.substring(rootDir.length + 1))\n    }\n  }\n\n  delta.added = pathSorter(delta.added)\n  delta.deleted = pathSorter(delta.deleted)\n  return delta\n}"]}