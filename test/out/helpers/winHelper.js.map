{"version":3,"file":"winHelper.js","sourceRoot":"","sources":["../../src/helpers/winHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import { walk } from \"builder-util/out/fs\"\nimport { Arch, Platform } from \"electron-builder\"\nimport { readAsarJson } from \"app-builder-lib/out/asar/asar\"\nimport { outputFile } from \"fs-extra\"\nimport { promises as fs } from \"fs\"\nimport { safeLoad } from \"js-yaml\"\nimport * as path from \"path\"\nimport { assertThat } from \"./fileAssert\"\nimport { PackedContext } from \"./packTester\"\nimport { diff, WineManager } from \"./wine\"\n\nexport async function expectUpdateMetadata(context: PackedContext, arch: Arch = Arch.ia32, requireCodeSign: boolean = false): Promise<void> {\n  const data = safeLoad(await fs.readFile(path.join(context.getResources(Platform.WINDOWS, arch), \"app-update.yml\"), \"utf-8\")) as any\n  if (requireCodeSign) {\n    expect(data.publisherName).toEqual([\"Foo, Inc\"])\n    delete data.publisherName\n  }\n\n  expect(data).toMatchSnapshot()\n}\n\nexport async function checkHelpers(resourceDir: string, isPackElevateHelper: boolean) {\n  const elevateHelperExecutable = path.join(resourceDir, \"elevate.exe\")\n  if (isPackElevateHelper) {\n    await assertThat(elevateHelperExecutable).isFile()\n  }\n  else {\n    await assertThat(elevateHelperExecutable).doesNotExist()\n  }\n}\n\nexport async function doTest(outDir: string, perUser: boolean, productFilename = \"TestApp Setup\", name = \"TestApp\", menuCategory: string | null = null, packElevateHelper = true) {\n  if (process.env.DO_WINE !== \"true\") {\n    return Promise.resolve()\n  }\n\n  const wine = new WineManager()\n  await wine.prepare()\n  const driveC = path.join(wine.wineDir!!, \"drive_c\")\n  const driveCWindows = path.join(wine.wineDir!!, \"drive_c\", \"windows\")\n  const perUserTempDir = path.join(wine.userDir!!, \"Temp\")\n  const walkFilter = (it: string) => {\n    return it !== driveCWindows && it !== perUserTempDir\n  }\n\n  function listFiles() {\n    return walk(driveC, null, {consume: walkFilter})\n  }\n\n  let fsBefore = await listFiles()\n\n  await wine.exec(path.join(outDir, `${productFilename} Setup 1.1.0.exe`), \"/S\")\n\n  let instDir = perUser ? path.join(wine.userDir!!, \"Local Settings\", \"Application Data\", \"Programs\") : path.join(driveC, \"Program Files\")\n  if (menuCategory != null) {\n    instDir = path.join(instDir, menuCategory)\n  }\n\n  const appAsar = path.join(instDir, name, \"resources\", \"app.asar\")\n  expect(await readAsarJson(appAsar, \"package.json\")).toMatchObject({\n    name,\n  })\n\n  if (!perUser) {\n    let startMenuDir = path.join(driveC, \"users\", \"Public\", \"Start Menu\", \"Programs\")\n    if (menuCategory != null) {\n      startMenuDir = path.join(startMenuDir, menuCategory)\n    }\n    await assertThat(path.join(startMenuDir, `${productFilename}.lnk`)).isFile()\n  }\n\n  if (packElevateHelper) {\n    await assertThat(path.join(instDir, name, \"resources\", \"elevate.exe\")).isFile()\n  }\n  else {\n    await assertThat(path.join(instDir, name, \"resources\", \"elevate.exe\")).doesNotExist()\n  }\n\n  let fsAfter = await listFiles()\n\n  let fsChanges = diff(fsBefore, fsAfter, driveC)\n  expect(fsChanges.added).toMatchSnapshot()\n  expect(fsChanges.deleted).toEqual([])\n\n  // run installer again to test uninstall\n  const appDataFile = path.join(wine.userDir!!, \"Application Data\", name, \"doNotDeleteMe\")\n  await outputFile(appDataFile, \"app data must be not removed\")\n  fsBefore = await listFiles()\n  await wine.exec(path.join(outDir, `${productFilename} Setup 1.1.0.exe`), \"/S\")\n  fsAfter = await listFiles()\n\n  fsChanges = diff(fsBefore, fsAfter, driveC)\n  expect(fsChanges.added).toEqual([])\n  expect(fsChanges.deleted).toEqual([])\n\n  await assertThat(appDataFile).isFile()\n\n  await wine.exec(path.join(outDir, `${productFilename} Setup 1.1.0.exe`), \"/S\", \"--delete-app-data\")\n  await assertThat(appDataFile).doesNotExist()\n}\n"]}