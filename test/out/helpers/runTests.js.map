{"version":3,"file":"runTests.js","sourceRoot":"","sources":["../../src/helpers/runTests.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash } from \"crypto\"\nimport { emptyDir, readJson, realpathSync, remove } from \"fs-extra\"\nimport { isCI as isCi } from \"ci-info\"\nimport { tmpdir } from \"os\"\nimport * as path from \"path\"\nimport { deleteOldElectronVersion, downloadAllRequiredElectronVersions } from \"./downloadElectron\"\n\nconst baseDir = process.env.APP_BUILDER_TMP_DIR || realpathSync(tmpdir())\nconst APP_BUILDER_TMP_DIR = path.join(baseDir, `et-${createHash(\"md5\").update(__dirname).digest(\"hex\")}`)\n\nrunTests()\n  .catch(error => {\n    console.error(error.stack || error)\n    process.exit(1)\n  })\n\nasync function runTests() {\n  process.env.BABEL_JEST_SKIP = \"true\"\n\n  if (process.env.CIRCLECI) {\n    await emptyDir(APP_BUILDER_TMP_DIR)\n  }\n  else {\n    await Promise.all([\n      deleteOldElectronVersion(),\n      downloadAllRequiredElectronVersions(),\n      emptyDir(APP_BUILDER_TMP_DIR),\n    ])\n  }\n\n  const testFiles = process.env.TEST_FILES\n\n  const testPatterns: Array<string> = []\n  if (testFiles != null && testFiles.length !== 0) {\n    testPatterns.push(...testFiles.split(\",\"))\n  }\n  else if (process.env.CIRCLE_NODE_INDEX != null && process.env.CIRCLE_NODE_INDEX.length !== 0) {\n    const circleNodeIndex = parseInt(process.env.CIRCLE_NODE_INDEX!!, 10)\n    if (circleNodeIndex === 0) {\n      testPatterns.push(\"debTest\")\n      testPatterns.push(\"fpmTest\")\n      testPatterns.push(\"winPackagerTest\")\n      testPatterns.push(\"winCodeSignTest\")\n      testPatterns.push(\"squirrelWindowsTest\")\n      testPatterns.push(\"nsisUpdaterTest\")\n      testPatterns.push(\"macArchiveTest\")\n      testPatterns.push(\"macCodeSignTest\")\n      testPatterns.push(\"extraMetadataTest\")\n      testPatterns.push(\"HoistedNodeModuleTest\")\n      testPatterns.push(\"configurationValidationTest\")\n      testPatterns.push(\"webInstallerTest\")\n    }\n    else if (circleNodeIndex === 1) {\n      testPatterns.push(\"oneClickInstallerTest\")\n    }\n    else if (circleNodeIndex === 2) {\n      testPatterns.push(\"snapTest\")\n      testPatterns.push(\"macPackagerTest\")\n      testPatterns.push(\"linuxPackagerTest\")\n      testPatterns.push(\"msiTest\")\n      testPatterns.push(\"ignoreTest\")\n      testPatterns.push(\"mainEntryTest\")\n      testPatterns.push(\"ArtifactPublisherTest\")\n      testPatterns.push(\"RepoSlugTest\")\n      testPatterns.push(\"portableTest\")\n      testPatterns.push(\"globTest\")\n      testPatterns.push(\"BuildTest\")\n      testPatterns.push(\"linuxArchiveTest\")\n    }\n    else {\n      testPatterns.push(\"PublishManagerTest\")\n      testPatterns.push(\"assistedInstallerTest\")\n      testPatterns.push(\"filesTest\")\n      testPatterns.push(\"protonTest\")\n    }\n    console.log(`Test files for node ${circleNodeIndex}: ${testPatterns.join(\", \")}`)\n  }\n\n  process.env.APP_BUILDER_TMP_DIR = APP_BUILDER_TMP_DIR\n\n  const rootDir = path.join(__dirname, \"..\", \"..\")\n\n  process.chdir(rootDir)\n\n  const config = (await readJson(path.join(rootDir, \"package.json\"))).jest\n  // use custom cache dir to avoid https://github.com/facebook/jest/issues/1903#issuecomment-261212137\n  config.cacheDirectory = process.env.JEST_CACHE_DIR || \"/tmp/jest-electron-builder-tests\"\n  config.bail = process.env.TEST_BAIL === \"true\"\n\n  let runInBand = false\n  const scriptArgs = process.argv.slice(2)\n\n  const testPathIgnorePatterns = config.testPathIgnorePatterns\n  if (scriptArgs.length > 0) {\n    for (const scriptArg of scriptArgs) {\n      console.log(`custom opt: ${scriptArg}`)\n      if (\"runInBand\" === scriptArg) {\n        runInBand = true\n      }\n      else if (scriptArg.includes(\"=\")) {\n        const equalIndex = scriptArg.indexOf(\"=\")\n        const envName = scriptArg.substring(0, equalIndex)\n        let envValue = scriptArg.substring(equalIndex + 1)\n        if (envValue === \"isCi\") {\n          envValue = isCi ? \"true\" : \"false\"\n        }\n\n        process.env[envName] = envValue\n        console.log(`Custom env ${envName}=${envValue}`)\n\n        if (envName === \"ALL_TESTS\" && envValue === \"false\") {\n          config.cacheDirectory += \"-basic\"\n        }\n      }\n      else if (scriptArg.startsWith(\"skip\")) {\n        if (!isCi) {\n          const suffix = scriptArg.substring(\"skip\".length)\n          if (scriptArg === \"skipArtifactPublisher\") {\n            testPathIgnorePatterns.push(\"[\\\\/]{1}ArtifactPublisherTest.js$\")\n            config.cacheDirectory += `-${suffix}`\n          }\n          else {\n            throw new Error(`Unknown opt ${scriptArg}`)\n          }\n        }\n      }\n      else {\n        config[scriptArg] = true\n      }\n    }\n  }\n\n  const jestOptions: any = {\n    verbose: true,\n    updateSnapshot: process.env.UPDATE_SNAPSHOT === \"true\",\n    config,\n    runInBand,\n    projects: [rootDir],\n  }\n\n  if (testPatterns.length > 0) {\n    jestOptions.testPathPattern = testPatterns\n      .map(it => it.endsWith(\".ts\") || it.endsWith(\"*\") ? it : `${it}\\\\.ts$`)\n  }\n  if (process.env.CIRCLECI != null || process.env.TEST_JUNIT_REPORT === \"true\") {\n    jestOptions.reporters = [\"default\", \"jest-junit\"]\n  }\n\n  // console.log(JSON.stringify(jestOptions, null, 2))\n\n  const testResult = await require(\"@jest/core\").runCLI(jestOptions, jestOptions.projects)\n  const exitCode = testResult.results == null || testResult.results.success ? 0 : testResult.globalConfig.testFailureExitCode\n  if (isCi) {\n    process.exit(exitCode)\n  }\n\n  await remove(APP_BUILDER_TMP_DIR)\n  process.exitCode = exitCode\n  if (testResult.globalConfig.forceExit) {\n    process.exit(exitCode)\n  }\n}"]}