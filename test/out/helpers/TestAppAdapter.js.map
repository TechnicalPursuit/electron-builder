{"version":3,"file":"TestAppAdapter.js","sourceRoot":"","sources":["../../src/helpers/TestAppAdapter.ts"],"names":[],"mappings":";;;AAAA,gFAA4E;AAE5E,mGAAmG;AACnG,MAAa,cAAe,SAAQ,uCAAkB;IACpD,YAAY,OAAe,EAAU,cAAsB;QACzD,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;QADQ,mBAAc,GAAd,cAAc,CAAQ;IAE3D,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAA;IAC5B,CAAC;IAED,IAAI,YAAY;QACd,8EAA8E;QAC9E,OAAO,IAAI,CAAC,cAAc,CAAA;IAC5B,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAA;IACb,CAAC;IAED,SAAS;QACP,OAAO,OAAO,CAAC,OAAO,EAAE,CAAA;IAC1B,CAAC;IAED,IAAI;QACF,QAAQ;IACV,CAAC;CACF;AAzBD,wCAyBC;AAED,MAAM,OAAO;IACX,YAA6B,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAC5C,CAAC;IAED,yDAAyD;IACzD,UAAU;QACR,OAAO,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IAED,OAAO;QACL,OAAO,kBAAkB,CAAA;IAC3B,CAAC;IAED,yDAAyD;IACzD,UAAU;QACR,OAAO,EAAE,CAAA;IACX,CAAC;IAED,yDAAyD;IACzD,OAAO,CAAC,IAAY;QAClB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;IACvC,CAAC;IAED,EAAE;QACA,UAAU;IACZ,CAAC;IAED,IAAI;QACF,UAAU;IACZ,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAA;IACb,CAAC;CACF","sourcesContent":["import { ElectronAppAdapter } from \"electron-updater/out/ElectronAppAdapter\"\n\n// do not implement AppAdapter directly, test that our ElectronAppAdapter implementation is correct\nexport class TestAppAdapter extends ElectronAppAdapter {\n  constructor(version: string, private _baseCachePath: string) {\n    super(new MockApp(version))\n  }\n\n  get baseCachePath(): string {\n    return this._baseCachePath\n  }\n\n  get userDataPath(): string {\n    // use cache as user data in tests (only staging id is stored under user data)\n    return this._baseCachePath\n  }\n\n  get isPackaged(): boolean {\n    return true\n  }\n\n  whenReady(): Promise<void> {\n    return Promise.resolve()\n  }\n\n  quit(): void {\n    // empty\n  }\n}\n\nclass MockApp {\n  constructor(private readonly version: string) {\n  }\n\n  // noinspection JSMethodCanBeStatic,JSUnusedGlobalSymbols\n  getVersion() {\n    return this.version\n  }\n\n  getName() {\n    return \"test-updater-app\"\n  }\n\n  // noinspection JSMethodCanBeStatic,JSUnusedGlobalSymbols\n  getAppPath() {\n    return \"\"\n  }\n\n  // noinspection JSMethodCanBeStatic,JSUnusedGlobalSymbols\n  getPath(type: string) {\n    throw new Error(\"must be not called\")\n  }\n\n  on() {\n    // ignored\n  }\n\n  once() {\n    // ignored\n  }\n\n  isReady() {\n    return true\n  }\n}"]}