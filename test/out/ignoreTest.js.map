{"version":3,"file":"ignoreTest.js","sourceRoot":"","sources":["../src/ignoreTest.ts"],"names":[],"mappings":"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","sourcesContent":["import { DIR_TARGET, Platform } from \"electron-builder\"\nimport { outputFile } from \"fs-extra\"\nimport * as path from \"path\"\nimport { assertThat } from \"./helpers/fileAssert\"\nimport { app, checkDirContents, modifyPackageJson } from \"./helpers/packTester\"\n\ntest.ifDevOrLinuxCi(\"ignore build resources\", app({\n  targets: Platform.LINUX.createTarget(DIR_TARGET),\n  config: {\n    asar: false\n  }\n}, {\n  projectDirCreated: projectDir => {\n    return outputFile(path.join(projectDir, \"one/build/foo.txt\"), \"data\")\n  },\n  packed: context => {\n    return assertThat(path.join(context.getResources(Platform.LINUX), \"app\", \"one\", \"build\", \"foo.txt\")).isFile()\n  },\n}))\n\ntest.ifDevOrLinuxCi(\"2 ignore\", app({\n  targets: Platform.LINUX.createTarget(DIR_TARGET),\n  config: {\n    asar: false,\n    files: [\n      \"**/*\",\n      \"!{app,build,electron,mobile,theme,uploads,util,dist,dist-app/aot,dist-app/app.bundle.js,dist-app/dependencies/shim.min.js,dist-app/dependencies/classList.min.js,dist-app/dependencies/web-animations.min.js,main.js,main-aot.js,favicon.ico,index.html,index-aot.html,index-cordova.html,index-aot.js,index-electron.js,index.bundle.js,systemjs.config.js,systemjs-angular-loader.js,package-lock.json}\",\n      \"!*config*.json\",\n      \"!**/*.{ts,scss,map,md,csv,wrapped}\",\n      \"!**/*.{hprof,orig,pyc,pyo,rbc}\",\n      \"!**/._*\",\n      \"!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,thumbs.db,.gitignore,.gitattributes,.flowconfig,.yarn-metadata.json,.idea,appveyor.yml,.travis.yml,circle.yml,npm-debug.log,.nyc_output,yarn.lock,.yarn-integrity}\"\n    ],\n  }\n}, {\n  projectDirCreated: projectDir => {\n    return outputFile(path.join(projectDir, \"electron/foo.txt\"), \"data\")\n  },\n  packed: context => {\n    return assertThat(path.join(context.getResources(Platform.LINUX), \"app\", \"electron\", \"foo.txt\")).doesNotExist()\n  },\n}))\n\ntest.ifDevOrLinuxCi(\"ignore known ignored files\", app({\n  targets: Platform.LINUX.createTarget(DIR_TARGET),\n  config: {\n    asar: false\n  }\n}, {\n  projectDirCreated: projectDir => Promise.all([\n    outputFile(path.join(projectDir, \".svn\", \"foo\"), \"data\"),\n    outputFile(path.join(projectDir, \".git\", \"foo\"), \"data\"),\n    outputFile(path.join(projectDir, \"node_modules\", \".bin\", \"f.txt\"), \"data\"),\n    outputFile(path.join(projectDir, \"node_modules\", \".bin2\", \"f.txt\"), \"data\"),\n  ]),\n  packed: context => checkDirContents(path.join(context.getResources(Platform.LINUX), \"app\")),\n}))\n\n// skip on macOS because we want test only / and \\\ntest.ifNotCiMac(\"ignore node_modules dev dep\", app({\n  targets: Platform.LINUX.createTarget(DIR_TARGET),\n  config: {\n    asar: false,\n  },\n}, {\n  projectDirCreated: projectDir => {\n    return Promise.all([\n      modifyPackageJson(projectDir, data => {\n        data.devDependencies = {\n          \"electron-osx-sign\": \"*\", ...data.devDependencies}\n      }),\n      outputFile(path.join(projectDir, \"node_modules\", \"electron-osx-sign\", \"package.json\"), \"{}\"),\n    ])\n  },\n  packed: context => {\n    return Promise.all([\n      assertThat(path.join(context.getResources(Platform.LINUX), \"app\", \"node_modules\", \"electron-osx-sign\")).doesNotExist(),\n      assertThat(path.join(context.getResources(Platform.LINUX), \"app\", \"ignoreMe\")).doesNotExist(),\n    ])\n  },\n}))"]}