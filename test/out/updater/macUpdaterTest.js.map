{"version":3,"file":"macUpdaterTest.js","sourceRoot":"","sources":["../../src/updater/macUpdaterTest.ts"],"names":[],"mappings":";;AAAA,+DAAoF;AACpF,gEAA4D;AAC5D,mCAAqC;AACrC,sDAAkD;AAClD,gEAAgI;AAEhI,MAAM,iBAAkB,SAAQ,qBAAY;IAA5C;;QACU,cAAS,GAAkB,IAAI,CAAA;IAqBzC,CAAC;IAnBC,mCAAmC;IACnC,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAA;QAChD,IAAI,CAAC,QAAQ,EAAE;aACZ,KAAK,CAAC,KAAK,CAAC,EAAE;YACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;QAC3B,CAAC,CAAC,CAAA;IACN,CAAC;IAEO,KAAK,CAAC,QAAQ;QACpB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,8BAAY,CAAC,OAAO,CAAC,qDAA8B,CAAC,IAAI,CAAC,SAAW,EAAE,EAAE,CAAC,CAAC,CAAG,CAAC,CAAA;QAC7G,MAAM,8BAAY,CAAC,OAAO,CAAC,qDAA8B,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;IAC1E,CAAC;IAED,mCAAmC;IACnC,UAAU,CAAC,SAAc;QACvB,2DAA2D;QAC3D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,GAAG,CAAA;IAChC,CAAC;CACF;AAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;IACjD,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAA;IACjD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;QACzB,OAAO;YACL,WAAW,EAAE,iBAAiB;SAC/B,CAAA;IACH,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAA;IAEnB,MAAM,OAAO,GAAG,IAAI,uBAAU,CAAC,SAAS,EAAE,MAAM,sCAAoB,EAAE,CAAC,CAAA;IACvE,MAAM,OAAO,GAAkB;QAC7B,QAAQ,EAAE,QAAQ;QAClB,KAAK,EAAE,SAAS;QAChB,IAAI,EAAE,uBAAuB;KAC9B,CAAA;IACD,OAAO,CAAC,gBAAgB,GAAG,MAAM,mCAAiB,CAAC,OAAO,CAAC,CAAA;IAE3D,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QACnC,oCAAoC;IACtC,CAAC,CAAC,CAAA;IAEF,MAAM,iCAAe,CAAC,OAAO,CAAC,CAAC;IAC9B,OAAe,CAAC,gBAAgB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAA;IAC7D,MAAM,YAAY,GAAG,6BAAW,CAAC,OAAO,CAAC,CAAA;IAEzC,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,eAAe,EAAE,CAAA;IACzD,yCAAyC;IACzC,yFAAyF;IACzF,MAAM,KAAK,GAAG,MAAM,iBAAiB,CAAC,eAAe,CAAA;IACrD,MAAM,CAAC,KAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACjC,MAAM,uBAAU,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;IACrC,MAAM,CAAC,YAAY,CAAC,CAAC,eAAe,EAAE,CAAA;AACxC,CAAC,CAAC,CAAA","sourcesContent":["import { configureRequestOptionsFromUrl, GithubOptions } from \"builder-util-runtime\"\nimport { MacUpdater } from \"electron-updater/out/MacUpdater\"\nimport { EventEmitter } from \"events\"\nimport { assertThat } from \"../helpers/fileAssert\"\nimport { createTestAppAdapter, httpExecutor, trackEvents, tuneTestUpdater, writeUpdateConfig } from \"../helpers/updaterTestUtil\"\n\nclass TestNativeUpdater extends EventEmitter {\n  private updateUrl: string | null = null\n\n  // noinspection JSMethodCanBeStatic\n  checkForUpdates() {\n    console.log(\"TestNativeUpdater.checkForUpdates\")\n    this.download()\n      .catch(error => {\n        this.emit(\"error\", error)\n      })\n  }\n\n  private async download() {\n    const data = JSON.parse((await httpExecutor.request(configureRequestOptionsFromUrl(this.updateUrl!!, {})))!!)\n    await httpExecutor.request(configureRequestOptionsFromUrl(data.url, {}))\n  }\n\n  // noinspection JSMethodCanBeStatic\n  setFeedURL(updateUrl: any) {\n    // console.log(\"TestNativeUpdater.setFeedURL \" + updateUrl)\n    this.updateUrl = updateUrl.url\n  }\n}\n\ntest.ifAll.ifNotCi.ifMac(\"mac updates\", async () => {\n  const mockNativeUpdater = new TestNativeUpdater()\n  jest.mock(\"electron\", () => {\n    return {\n      autoUpdater: mockNativeUpdater,\n    }\n  }, {virtual: true})\n\n  const updater = new MacUpdater(undefined, await createTestAppAdapter())\n  const options: GithubOptions = {\n    provider: \"github\",\n    owner: \"develar\",\n    repo: \"onshape-desktop-shell\",\n  }\n  updater.updateConfigPath = await writeUpdateConfig(options)\n\n  updater.on(\"download-progress\", () => {\n    // console.log(JSON.stringify(data))\n  })\n\n  await tuneTestUpdater(updater);\n  (updater as any)._testOnlyOptions.platform = process.platform\n  const actualEvents = trackEvents(updater)\n\n  const updateCheckResult = await updater.checkForUpdates()\n  // todo when will be updated to use files\n  // expect(removeUnstableProperties(updateCheckResult.updateInfo.files)).toMatchSnapshot()\n  const files = await updateCheckResult.downloadPromise\n  expect(files!!.length).toEqual(1)\n  await assertThat(files!![0]).isFile()\n  expect(actualEvents).toMatchSnapshot()\n})"]}