{"version":3,"file":"differentialUpdateTest.js","sourceRoot":"","sources":["../../src/updater/differentialUpdateTest.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { doSpawn } from \"builder-util\"\nimport { GenericServerOptions, S3Options } from \"builder-util-runtime\"\nimport { getBinFromUrl } from \"app-builder-lib/out/binDownload\"\nimport { Arch, Configuration, Platform } from \"electron-builder\"\nimport { AppImageUpdater } from \"electron-updater/out/AppImageUpdater\"\nimport { MacUpdater } from \"electron-updater/out/MacUpdater\"\nimport { NsisUpdater } from \"electron-updater/out/NsisUpdater\"\nimport { EventEmitter } from \"events\"\nimport { move } from \"fs-extra\"\nimport * as path from \"path\"\nimport { TmpDir } from \"temp-file\"\nimport { assertPack, removeUnstableProperties } from \"../helpers/packTester\"\nimport { tuneTestUpdater, writeUpdateConfig } from \"../helpers/updaterTestUtil\"\nimport { nsisDifferentialUpdateFakeSnapshot, nsisWebDifferentialUpdateTestFakeSnapshot } from \"../helpers/differentialUpdateTestSnapshotData\"\nimport { TestAppAdapter } from \"../helpers/TestAppAdapter\"\n\n/*\n\nrm -rf ~/Documents/onshape-desktop-shell/node_modules/electron-updater && cp -R ~/Documents/electron-builder/packages/electron-updater ~/Documents/onshape-desktop-shell/node_modules/electron-updater && rm -rf ~/Documents/onshape-desktop-shell/node_modules/electron-updater/src && rm -rf ~/Documents/onshape-desktop-shell/node_modules/builder-util-runtime && cp -R ~/Documents/electron-builder/packages/builder-util-runtime ~/Documents/onshape-desktop-shell/node_modules/builder-util-runtime && rm -rf ~/Documents/onshape-desktop-shell/node_modules/builder-util-runtime/src\n\n*/\n// %USERPROFILE%\\AppData\\Roaming\\Onshape\n\n// mkdir -p ~/minio-data/onshape\n// minio server ~/minio-data\n\nconst OLD_VERSION_NUMBER = \"1.0.0\"\n\nconst testAppCacheDirName = \"testapp-updater\"\n\ntest.ifAll.ifDevOrWinCi(\"web installer\", async () => {\n  let outDirs: Array<string> = []\n\n  async function buildApp(version: string, tmpDir: TmpDir) {\n    await assertPack(\"test-app-one\", {\n      targets: Platform.WINDOWS.createTarget([\"nsis-web\"], Arch.x64),\n      config: {\n        extraMetadata: {\n          version,\n        },\n        // package in any case compressed, customization is explicitly disabled - \"do not allow to change compression level to avoid different packages\"\n        compression: process.env.COMPRESSION as any || \"store\",\n        publish: {\n          provider: \"s3\",\n          bucket: \"develar\",\n          path: \"test\",\n        },\n      },\n    }, {\n      signedWin: true,\n      packed: async context => {\n        outDirs.push(context.outDir)\n      },\n      tmpDir,\n    })\n  }\n\n  if (process.env.__SKIP_BUILD == null) {\n    const tmpDir = new TmpDir(\"differential-updater-test\")\n    try {\n      await buildApp(OLD_VERSION_NUMBER, tmpDir)\n      // move dist temporarily out of project dir\n      const oldDir = await tmpDir.getTempDir()\n      await move(outDirs[0], oldDir)\n      outDirs[0] = oldDir\n\n      await buildApp(\"1.0.1\", tmpDir)\n    }\n    catch (e) {\n      await tmpDir.cleanup()\n      throw e\n    }\n\n    // move old dist to new project as oldDist - simplify development (no need to guess where old dist located in the temp fs)\n    const oldDir = path.join(outDirs[1], \"..\", \"oldDist\")\n    await move(outDirs[0], oldDir)\n    outDirs[0] = oldDir\n\n    await move(path.join(oldDir, \"nsis-web\", `TestApp-${OLD_VERSION_NUMBER}-x64.nsis.7z`), path.join(getTestUpdaterCacheDir(oldDir), testAppCacheDirName, \"package.7z\"))\n  }\n  else {\n    nsisWebDifferentialUpdateTestFakeSnapshot()\n    outDirs = [\n      path.join(process.env.TEST_APP_TMP_DIR!!, \"oldDist\"),\n      path.join(process.env.TEST_APP_TMP_DIR!!, \"dist\"),\n    ]\n  }\n\n  await testBlockMap(outDirs[0], path.join(outDirs[1], \"nsis-web\"), NsisUpdater, \"win-unpacked\", Platform.WINDOWS)\n})\n\ntest.ifAll.ifDevOrWinCi(\"nsis\", async () => {\n  let outDirs: Array<string> = []\n\n  async function buildApp(version: string) {\n    await assertPack(\"test-app-one\", {\n      targets: Platform.WINDOWS.createTarget([\"nsis\"], Arch.x64),\n      config: {\n        extraMetadata: {\n          version,\n        },\n        // package in any case compressed, customization is explicitly disabled - \"do not allow to change compression level to avoid different packages\"\n        compression: process.env.COMPRESSION as any || \"store\",\n        publish: {\n          provider: \"s3\",\n          bucket: \"develar\",\n          path: \"test\",\n        },\n      },\n    }, {\n      signedWin: true,\n      packed: async context => {\n        outDirs.push(context.outDir)\n      }\n    })\n  }\n\n  if (process.env.__SKIP_BUILD == null) {\n    await buildApp(OLD_VERSION_NUMBER)\n\n    const tmpDir = new TmpDir(\"differential-updater-test\")\n    try {\n      // move dist temporarily out of project dir\n      const oldDir = await tmpDir.getTempDir()\n      await move(outDirs[0], oldDir)\n      outDirs[0] = oldDir\n\n      await buildApp(\"1.0.1\")\n    }\n    catch (e) {\n      await tmpDir.cleanup()\n      throw e\n    }\n\n    // move old dist to new project as oldDist - simplify development (no need to guess where old dist located in the temp fs)\n    const oldDir = path.join(outDirs[1], \"..\", \"oldDist\")\n    await move(outDirs[0], oldDir)\n    outDirs[0] = oldDir\n\n    await move(path.join(oldDir, `Test App ßW Setup ${OLD_VERSION_NUMBER}.exe`), path.join(getTestUpdaterCacheDir(oldDir), testAppCacheDirName, \"installer.exe\"))\n    await move(path.join(oldDir, \"Test App ßW Setup 1.0.0.exe.blockmap\"), path.join(outDirs[1], \"Test App ßW Setup 1.0.0.exe.blockmap\"))\n  }\n  else {\n    nsisDifferentialUpdateFakeSnapshot()\n\n    outDirs = [\n      path.join(process.env.TEST_APP_TMP_DIR!!, \"oldDist\"),\n      path.join(process.env.TEST_APP_TMP_DIR!!, \"dist\"),\n    ]\n  }\n\n  await testBlockMap(outDirs[0], outDirs[1], NsisUpdater, \"win-unpacked\", Platform.WINDOWS)\n})\n\nasync function testLinux(arch: Arch) {\n  process.env.TEST_UPDATER_ARCH = Arch[arch]\n\n  const outDirs: Array<string> = []\n  const tmpDir = new TmpDir(\"differential-updater-test\")\n  try {\n    await doBuild(outDirs, Platform.LINUX.createTarget([\"appimage\"], arch), tmpDir)\n\n    process.env.APPIMAGE = path.join(outDirs[0], `TestApp-1.0.0-${arch === Arch.x64 ? \"x86_64\" : \"i386\"}.AppImage`)\n    await testBlockMap(outDirs[0], path.join(outDirs[1]), AppImageUpdater, `__appImage-${Arch[arch]}`, Platform.LINUX)\n  }\n  finally {\n    await tmpDir.cleanup()\n  }\n}\n\ntest.ifAll.ifDevOrLinuxCi(\"AppImage\", () => testLinux(Arch.x64))\n\ntest.ifAll.ifDevOrLinuxCi(\"AppImage ia32\", () => testLinux(Arch.ia32))\n\n// ifAll.ifMac.ifNotCi todo\ntest.skip(\"dmg\", async () => {\n  const outDirs: Array<string> = []\n  const tmpDir = new TmpDir(\"differential-updater-test\")\n  if (process.env.__SKIP_BUILD == null) {\n    await doBuild(outDirs, Platform.MAC.createTarget(), tmpDir, {\n      mac: {\n        electronUpdaterCompatibility: \">=2.17.0\",\n      },\n    })\n  }\n  else {\n    // todo\n  }\n\n  await testBlockMap(outDirs[0], path.join(outDirs[1]), MacUpdater, \"mac/Test App ßW.app\", Platform.MAC)\n})\n\nasync function buildApp(version: string, outDirs: Array<string>, targets: Map<Platform, Map<Arch, Array<string>>>, tmpDir: TmpDir, extraConfig: Configuration | null | undefined) {\n  await assertPack(\"test-app-one\", {\n    targets,\n    config: {\n      extraMetadata: {\n        version,\n      },\n      ...extraConfig,\n      compression: \"normal\",\n      publish: {\n        provider: \"s3\",\n        bucket: \"develar\",\n        path: \"test\",\n      },\n    },\n  }, {\n    packed: async context => {\n      outDirs.push(context.outDir)\n    },\n    tmpDir,\n  })\n}\n\nasync function doBuild(outDirs: Array<string>, targets: Map<Platform, Map<Arch, Array<string>>>, tmpDir: TmpDir, extraConfig?: Configuration | null) {\n  await buildApp(\"1.0.0\", outDirs, targets, tmpDir, extraConfig)\n  try {\n    // move dist temporarily out of project dir\n    const oldDir = await tmpDir.getTempDir()\n    await move(outDirs[0], oldDir)\n    outDirs[0] = oldDir\n\n    await buildApp(\"1.0.1\", outDirs, targets, tmpDir, extraConfig)\n  }\n  catch (e) {\n    await tmpDir.cleanup()\n    throw e\n  }\n\n  // move old dist to new project as oldDist - simplify development (no need to guess where old dist located in the temp fs)\n  const oldDir = path.join(outDirs[1], \"..\", \"oldDist\")\n  await move(outDirs[0], oldDir)\n  outDirs[0] = oldDir\n}\n\nasync function checkResult(updater: NsisUpdater) {\n  const updateCheckResult = await updater.checkForUpdates()\n  const downloadPromise = updateCheckResult.downloadPromise\n  // noinspection JSIgnoredPromiseFromCall\n  expect(downloadPromise).not.toBeNull()\n  const files = await downloadPromise\n  const fileInfo: any = updateCheckResult.updateInfo.files[0]\n\n  // because port is random\n  expect(fileInfo.url).toBeDefined()\n  delete fileInfo.url\n  expect(removeUnstableProperties(updateCheckResult.updateInfo)).toMatchSnapshot()\n  expect(files!!.map(it => path.basename(it))).toMatchSnapshot()\n}\n\nclass TestNativeUpdater extends EventEmitter {\n  // private updateUrl: string | null = null\n\n  // noinspection JSMethodCanBeStatic\n  checkForUpdates() {\n    console.log(\"TestNativeUpdater.checkForUpdates\")\n    // MacUpdater expects this to emit corresponding update-downloaded event\n    this.emit(\"update-downloaded\")\n    // this.download()\n    //   .catch(error => {\n    //     this.emit(\"error\", error)\n    //   })\n  }\n\n  // private async download() {\n  // }\n\n  // noinspection JSMethodCanBeStatic\n  setFeedURL(updateUrl: string) {\n    // console.log(\"TestNativeUpdater.setFeedURL \" + updateUrl)\n    // this.updateUrl = updateUrl\n  }\n}\n\nfunction getTestUpdaterCacheDir(oldDir: string) {\n  return path.join(oldDir, \"updater-cache\")\n}\n\nasync function testBlockMap(oldDir: string, newDir: string, updaterClass: any, appUpdateConfigPath: string, platform: Platform) {\n  const port = 8000 + updaterClass.name.charCodeAt(0) + Math.floor(Math.random() * 10000)\n\n  // noinspection SpellCheckingInspection\n  const httpServerProcess = doSpawn(path.join(await getBinFromUrl(\"ran\", \"0.1.3\", \"imfA3LtT6umMM0BuQ29MgO3CJ9uleN5zRBi3sXzcTbMOeYZ6SQeN7eKr3kXZikKnVOIwbH+DDO43wkiR/qTdkg==\"), process.platform, \"ran\"), [\n    `-root=${newDir}`,\n    `-port=${port}`,\n    \"-gzip=false\",\n    \"-listdir=true\",\n  ])\n  const mockNativeUpdater = new TestNativeUpdater()\n  jest.mock(\"electron\", () => {\n    return {\n      autoUpdater: mockNativeUpdater,\n    }\n  }, {virtual: true})\n\n  return await new BluebirdPromise((resolve, reject) => {\n    httpServerProcess.on(\"error\", reject)\n\n    const updater = new updaterClass(null, new TestAppAdapter(OLD_VERSION_NUMBER, getTestUpdaterCacheDir(oldDir)))\n    updater._appUpdateConfigPath = path.join(oldDir, (updaterClass === MacUpdater ? `${appUpdateConfigPath}/Contents/Resources` : (`${appUpdateConfigPath}/resources`)), \"app-update.yml\")\n    const doTest = async () => {\n      await tuneTestUpdater(updater, {\n        platform: platform.nodeName as any,\n        isUseDifferentialDownload: true,\n      })\n      updater.logger = console\n\n      const currentUpdaterCacheDirName = (await updater.configOnDisk.value).updaterCacheDirName\n      if (currentUpdaterCacheDirName == null) {\n        throw new Error(`currentUpdaterCacheDirName must be not null, appUpdateConfigPath: ${updater._appUpdateConfigPath}`)\n      }\n\n      updater.updateConfigPath = await writeUpdateConfig<GenericServerOptions | S3Options>({\n        provider: \"generic\",\n        updaterCacheDirName: currentUpdaterCacheDirName,\n        url: `http://127.0.0.1:${port}`,\n      })\n\n      // updater.updateConfigPath = await writeUpdateConfig<S3Options | GenericServerOptions>({\n      //   provider: \"s3\",\n      //   endpoint: \"http://192.168.178.34:9000\",\n      //   bucket: \"develar\",\n      //   path: \"onshape-test\",\n      // })\n\n      await checkResult(updater)\n    }\n\n    doTest()\n      .then(() => resolve())\n      .catch(reject)\n  })\n    .finally(() => {\n      httpServerProcess.kill()\n    })\n}"]}